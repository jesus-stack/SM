@model Infraestructure.Models.Usuario
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
@*<div class="container">
        <h2 class="stock_h1 offset-md-5">Inicio de Sesion</h2>
    </div>
    <div class="container">
        <div class="offset-md-4">
            @using (Html.BeginForm("Login", "Login"))
            {

                @Html.AntiForgeryToken()

                <br /><br />
                      <div class="container">
                          <div class="form-horizontal">

                              <hr />
                              @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                              <div class="form-group">
                                  @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                  <div class="col-md-6">
                                      @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control",AllowHtmlAttribute=new { placeholder = "" } } })
                                      @Html.ValidationMessageFor(model => model.Id, "", new  { @class = "text-danger" })
                                  </div>
                              </div>

                              @Html.HiddenFor(model => model.TipoUsuario1);
                              <div class="form-group">
                                  @Html.LabelFor(model => model.contrasena, htmlAttributes: new { @class = "control-label col-md-2" })
                                  <div class="col-md-6">
                                      @Html.PasswordFor(model => model.contrasena, new { @class = "form-control", HtmlTextWriterAttribute = new { placeholder = "Identificacion" } })
                                      @Html.ValidationMessageFor(model => model.contrasena, "", new { @class = "text-danger" })
                                  </div>

                              </div>
                              <br /> <br /> <br />
                              <div class="form-group">
                                  <div class="offset-md-2 ">
                                      <input type="submit" value="Iniciar Sesion" class="btn btn-default bg-sprimary shover" />
                                  </div>
                              </div>
                          </div>
                      </div>

            }
        </div>
    </div>*@
<div class="">
    <div class="login-box">
        <!-- /.login-logo -->
        <div class="card card-outline card-primary">
            <div class="card-header text-center">
                <a class="h1 stock_h1"><b>Stock Manage</b></a>
            </div>
            <div class="card-body">
                Inicie Sesión para comenzar</p>

                @using (Html.BeginForm("Login", "Login"))
                {

                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.TipoUsuario1);
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                    <div class="input-group mb-3">
                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", AllowHtmlAttribute = new { placeholder = "Identificacion" } } })

                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-id-card"></span>
                            </div>
                        </div>
                    </div>
                    @Html.LabelFor(model => model.contrasena, htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.ValidationMessageFor(model => model.contrasena, "", new { @class = "text-danger" })
                    <div class="input-group mb-3">
                        @Html.PasswordFor(model => model.contrasena, new { @class = "form-control", HtmlTextWriterAttribute = new { placeholder = "Contraseña" } })

                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-lock"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-8">
                            <div class="icheck-primary">
                                <input type="checkbox" id="remember">
                                <label for="remember">
                                    Recuerdame
                                </label>
                            </div>
                        </div>
                        <!-- /.col -->
                        <div class="col-4">
                            <button type="submit" class="btn bg-sprimary shover">Ingresar</button>
                        </div>
                        <!-- /.col -->
                    </div>
                }

                <div class="social-auth-links text-center mb-3">
                    <p>- O -</p>
                    <a class="btn btn-block btn-primary">
                        <i class="fas fa-envelope"></i> Ingresar usando Correo
                    </a>
                    <a class="btn btn-block btn-danger">
                        <i class="fab fa-google-plus mr-2"></i> Ingresar usando Google+
                    </a>
                </div>
                <p class="mb-1">
                    <a class="text-center">Olvide mi contraseña</a>
                </p>
                <p class="mb-0">
                    <a href="~/Usuario/CrearInferiorAdministrador" class="text-center">Solicitar nuevo usuario</a>
                </p>



            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>
<script>
        @Html.Raw(@ViewBag.NotificationMessage);
</script>

